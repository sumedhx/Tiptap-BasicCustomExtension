{"ast":null,"code":"var _jsxFileName = \"/Users/sumedh/Desktop/ReactJS/tiptap-extention/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"@tiptap/react\";\nimport { StarterKit } from \"@tiptap/starter-kit\";\nimport ImageResizer from \"./ImageResizerExtension\"; // Import the extension\nimport { EditorContent, useEditor } from \"@tiptap/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TiptapEditor = () => {\n  _s();\n  const editor = useEditor({\n    extensions: [StarterKit, ImageResizer // Add the custom extension\n    ],\n    content: `<p>Hello, world!</p>`\n  });\n\n  // Command to align image\n  const alignImage = alignment => {\n    editor.commands.setImageAlignment(alignment);\n  };\n\n  // Command to resize image\n  const resizeImage = (width, height) => {\n    editor.commands.resizeImage(width, height);\n  };\n\n  // Command to insert image\n  const insertImage = url => {\n    editor.commands.insertContent(`<img src=\"${url}\" alt=\"Image\" />`);\n  };\n\n  // Handle image selection and insert it into the editor\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        insertImage(reader.result); // Insert the local image as base64\n      };\n      reader.readAsDataURL(file); // Convert the image file to base64\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignImage(\"left\"),\n        children: \"Left Align\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignImage(\"center\"),\n        children: \"Center Align\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignImage(\"right\"),\n        children: \"Right Align\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(\"300\", \"auto\"),\n        children: \"Resize to 300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resizeImage(\"auto\", \"auto\"),\n        children: \"Reset Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorContent, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(TiptapEditor, \"t0rsU/t1p+LiVrRpHUSgNnV9Lz4=\", false, function () {\n  return [useEditor];\n});\n_c = TiptapEditor;\nexport default TiptapEditor;\nvar _c;\n$RefreshReg$(_c, \"TiptapEditor\");","map":{"version":3,"names":["React","useState","Editor","StarterKit","ImageResizer","EditorContent","useEditor","jsxDEV","_jsxDEV","TiptapEditor","_s","editor","extensions","content","alignImage","alignment","commands","setImageAlignment","resizeImage","width","height","insertImage","url","insertContent","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","children","type","accept","onChange","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sumedh/Desktop/ReactJS/tiptap-extention/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Editor } from \"@tiptap/react\";\nimport { StarterKit } from \"@tiptap/starter-kit\";\nimport ImageResizer from \"./ImageResizerExtension\"; // Import the extension\nimport { EditorContent, useEditor } from \"@tiptap/react\";\n\nconst TiptapEditor = () => {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      ImageResizer, // Add the custom extension\n    ],\n    content: `<p>Hello, world!</p>`,\n  });\n\n  // Command to align image\n  const alignImage = (alignment) => {\n    editor.commands.setImageAlignment(alignment);\n  };\n\n  // Command to resize image\n  const resizeImage = (width, height) => {\n    editor.commands.resizeImage(width, height);\n  };\n\n  // Command to insert image\n  const insertImage = (url) => {\n    editor.commands.insertContent(`<img src=\"${url}\" alt=\"Image\" />`);\n  };\n\n  // Handle image selection and insert it into the editor\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        insertImage(reader.result); // Insert the local image as base64\n      };\n      reader.readAsDataURL(file); // Convert the image file to base64\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImageChange}\n          style={{ marginBottom: \"10px\" }}\n        />\n        <button onClick={() => alignImage(\"left\")}>Left Align</button>\n        <button onClick={() => alignImage(\"center\")}>Center Align</button>\n        <button onClick={() => alignImage(\"right\")}>Right Align</button>\n\n        <button onClick={() => resizeImage(\"300\", \"auto\")}>Resize to 300px</button>\n        <button onClick={() => resizeImage(\"auto\", \"auto\")}>Reset Size</button>\n      </div>\n\n      <EditorContent editor={editor} />\n    </div>\n  );\n};\n\nexport default TiptapEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}